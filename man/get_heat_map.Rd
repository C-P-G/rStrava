% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_heat_map.R
\name{get_heat_map}
\alias{get_heat_map}
\alias{get_heat_map.actframe}
\alias{get_heat_map.list}
\title{Makes a heat map from your activity data}
\usage{
get_heat_map(act_data, ...)

\method{get_heat_map}{list}(act_data, acts = 1, alpha = NULL, f = 1,
  key = NULL, add_elev = FALSE, as_grad = FALSE, size = 0.5,
  col = "red", expand = 10, maptype = "terrain", units = "metric", ...)

\method{get_heat_map}{actframe}(act_data, alpha = NULL, f = 1, key = NULL,
  add_elev = FALSE, as_grad = FALSE, size = 0.5, col = "red",
  expand = 10, maptype = "terrain", ...)
}
\arguments{
\item{act_data}{an \code{actlist} object returned by \code{\link{get_activity_list}} or a \code{data.frame} returned by \code{\link{compile_activities}}}

\item{...}{arguments passed to or from other methods}

\item{acts}{numeric indicating which activities to plot based on index in \code{actlist}, defaults to most recent}

\item{alpha}{the opacity of the line desired. A single activity should be 1. Defaults to 0.5}

\item{f}{number specifying the fraction by which the range should be extended for the bounding box of the activities, passed to \code{\link[ggmap]{make_bbox}}}

\item{key}{chr string of Google API key for elevation data, passed to \code{\link[rgbif]{elevation}}, see details}

\item{add_elev}{logical indicating if elevation is overlayed by color shading on the activity lines}

\item{as_grad}{logical indicating if elevation is plotted as percent gradient, applies only if \code{add_elev = TRUE}}

\item{size}{numeric indicating width of activity lines}

\item{col}{chr string indicating either a single color of the activity lines if \code{add_grad = FALSE} or a color palette passed to \code{\link[ggplot2]{scale_fill_distiller}} if \code{add_grad = TRUE}}

\item{expand}{a numeric multiplier for expanding the number of lat/lon points on straight lines.  This can create a smoother elevation gradient if \code{add_grad = TRUE}.  Set \code{expand = 1} to suppress this behavior.}

\item{maptype}{chr string indicating the type of base map obtained from Google maps, values are \code{terrain} (default), \code{satellite}, \code{roadmap}, or \code{hybrid}}

\item{units}{chr string indicating plot units as either metric or imperial}
}
\value{
plot of activity on a Google map
}
\description{
Makes a heat map from your activity data
}
\details{
uses \code{\link{get_all_LatLon}} to produce a dataframe of latitudes and longitudes to use in the map. Uses {ggmap} to produce map and ggplot2 it
}
\examples{
\dontrun{
# get my activities
stoken <- httr::config(ttoken = strava_oauth(app_name, app_client_id, app_secret, cache = TRUE))
my_acts <- get_activity_list(stoken)

# default
get_heat_map(my_acts, acts = 1, alpha = 1)

# plot elevation on locations, requires key
mykey <- 'Get Google API key'
get_heat_map(my_acts, acts = 1, alpha = 1, key = mykey, add_elev = TRUE, col = 'Spectral', size = 2)

# compile first, change units
my_acts <- compile_activities(my_acts, acts = 1, units = 'imperial')
get_heat_map(my_acts, key = mykey, alpha = 1, add_elev = T, col = 'Spectral', size = 2, maptype = 'satellite')
}
}
\author{
Daniel Padfield, Marcus Beck
}
\concept{
token
}

